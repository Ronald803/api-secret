name: Static Code Analysis

on:
  push:
    branches:
      - main
      - ronald_develop
  pull_request:
    branches:
      - main
jobs:
  static_code_analysis:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

      - name: Run unit tests
        run: npm run test

      - name: Run end two end tests and generate coverage report
        run: npm run test:e2e -- --coverage

      - name: Check coverage report
        run: |
          if [ -f "__tests__/coverage/lcov.info" ]; then
            COVERAGE=$(cat __tests__/coverage/lcov.info | grep -E '^C' | awk '{print $2}')
            if [ -n "$COVERAGE" ] && [ "$COVERAGE" -lt 80 ]; then
              echo "Coverage is less than 80%: $COVERAGE%"
              exit 1
            fi
          else
            echo "Coverage report not found."
            exit 1
          fi
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: __tests__/coverage/

  build_docker_image:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker Image
        run: docker build -t api_secret_message:latest .

      - name: Push docker image to registry
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }} docker.io
          docker tag api_secret_message:latest ${{ secrets.DOCKER_USERNAME }}/api_secret_message:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/api_secret_message:latest

      # - name: Save Docker Image as TAR 
      #   run: docker save -o api_secret_message.tar api_secret_message:latest
      
      # - name: Upload Docker Image TAR
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: docker-image
      #     path: api_secret_message.tar